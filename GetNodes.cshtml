@using sistemproject.Models
@model (List<sistemproject.Controllers.Node3Step>, GetNodesModel)

@{
    ViewBag.Title = "GetNodes";
    Layout = "~/Views/Shared/NewThema/_LayoutTakvim.cshtml";
}
<link href="~/Content/SweetAlert2/sweetalert2.min.css" rel="stylesheet" />
<style>
    .cardServiceForm:hover {
        background-color: #bdd6eb !important;
        cursor:pointer;
    }
    .nodeState {
        float: left;
        margin-top: 0.7rem;
        margin-right: 0.6rem;
        font-size: 1.4rem;
        border-radius: 50%;
        padding: 6px;
    }

    .nodeStateDanger {
        color: #ff0000 !important;
        /*  background-color: #D9575721;*/
    }

    .nodeStateWarning {
        color: #D97D21 !important;
        /*  background-color: #d97d2121;*/
    }

    .nodeStateSuccess {
        color: #17996E !important;
        /* background-color: #17996E21;*/
    }

    .nodeStatePrimary {
        color: #20A1DA !important;
        /*        background-color: #20A1DA21;*/
    }

    .EditPencil {
        padding: 0.8rem;
        background: #a9a9a91f;
        border-radius: 4px;
    }

    .ribbon-1 {
        position: relative;
        width: 100%;
    }

    .ribbon-box {
        display: block;
        width: 100%;
        height: auto;
    }

    .overlay {
        position: initial;
        top: -16px;
        bottom: 0;
        height: 100%;
        width: 100%;
        opacity: 0;
        transition: .3s ease;
        background-color: #fffefebf;
        background-color: coral;
        padding: 5px;
    }

    .ribbon-1:hover .overlay {
        opacity: 1;
    }

    .icontoogle {
        padding: 5px;
        font-size: 16px;
        font-weight: bold;
        color: #555;
        cursor: pointer;
    }

        .icontoogle:before {
            font-family: 'FontAwesome';
            font-size: 16px;
            content: "\f0fe";
            margin-right: 10px;
            color: #cad4df;
        }

        .icontoogle.collapsed:before {
            content: "\f068";
            font-size: 12px;
        }
    /*    .toggle {
        padding: 0.1rem;
        border: 1px dotted gray;
    }*/

    .treeLine {
        display: inline-block;
        vertical-align: middle;
        height: 10px;
        width: 10px;
        margin-top: 2px;
        margin-right: 5px;
        border-bottom-left-radius: 1px;
        border-left: 1px dotted #eff2f5;
        border-bottom: 1px dotted #eff2f5;
    }

    .node {
        border-bottom-width: 1px;
        border-bottom-style: dashed;
        border-bottom-color: #a1a5b76e;
        /*     padding: 1rem;*/
        padding-top: 1rem;
        padding-bottom: 1rem;
        color: #a1a5b7;
    }

        .node h6 {
            margin-bottom: auto !important;
        }


    .icontoogleTable {
        padding: 5px;
        font-size: 16px;
        font-weight: bold;
        color: #555;
        cursor: pointer;
    }

        .icontoogleTable:before {
            font-family: 'FontAwesome';
            font-size: 16px;
            content: "\f0fe";
            margin-right: 10px;
            color: #cad4df;
        }

        .icontoogleTable.collapsed:before {
            content: "\f068";
            font-size: 12px;
        }

    .sc-plus:hover {
        color: darkslategrey;
        cursor: pointer;
    }

    .sc-minus:hover {
        color: darkred;
        cursor: pointer;
    }

    h6 {
        font-size: 0.8rem !important;
        font-weight: 450 !important;
    }

    a {
        color: darkslategrey !important;
        text-decoration: unset !important;
    }

    .sc-check, .sc-trash-bin {
        color: white;
    }

    .dropdown-toggle {
        /* color: #cad4df !important;*/
        /* border-color: #cad4df !important;*/
    }

        .dropdown-toggle:hover {
            color: #fff !important;
            border-color: #cad4df !important;
            background-color: #cad4df !important;
        }

        .dropdown-toggle :focus-visible {
            color: #fff !important;
            border-color: #cad4df !important;
            background-color: #cad4df !important;
        }

    .childPadding {
        font-size: 16px;
        color: #555;
        cursor: pointer;
    }

    .nodeOrderStyle {
        display: unset;
        float: right;
        margin-right: 1rem;
        margin-left: 1rem;
    }

    .upArrow:hover {
        cursor: pointer;
        color: #1da1f2;
        background-color: rgba(29, 161, 242, 0.1);
    }

    .downArrow:hover {
        cursor: pointer;
        color: #1da1f2;
        background-color: rgba(29, 161, 242, 0.1);
    }

    .tableDteails td {
        border: none !important
    }


    .tableDteails td, th {
        padding: 0.5rem !important;
    }

    .tableDteails thead th {
        border: none !important
    }
    .tableDteails tbody tr {
        border-bottom-width: 1px;
        border-bottom-style: dashed;
        border-bottom-color: #a1a5b76e;
    }
</style>
<div class="modal fade " id="MainNodeModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="MainNodeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="MainNodeModalLabel">Ana Kırılım Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Adım</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl" type="text" placeholder="Yazınız..." value="" id="MainNodeStep" name="MainNodeStep">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Başlangıç Tarihi</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl getDate" type="date" value="" id="MainNodeStartDate" name="MainNodeStartDate">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Bitiş Tarihi</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl getDate" type="date" value="" id="MainNodeEndDate" name="MainNodeEndDate">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" data-projectId="@Model.Item2.Project.Id" id="SubmitMainNode">Kaydet</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Proje Adımı Yönetimi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div style="display: flex;">
                        <i class="sc-number" style="font-size: 1.5rem; margin-right: 1rem; "></i>
                        <div>
                            <h5 id="step-value"></h5>
                        </div>
                    </div>
                </div>
                <div class="form-group row">

                    <label for="example-email-input" class="col-sm-4 col-form-label text-left my-auto">Müşteri Proje Yöneticisi</label>
                    <div class="col-sm-8">
                        <select name="selValue" class="selectpicker col-12 font13" multiple data-actions-box="true" id="CompanyResponsible">
                            @foreach (var k in Model.Item2.CompanyAuthorized)
                            {
                                <option value="@k.Id">@k.FullName</option>
                            }
                        </select>
                    </div>

                </div>
                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Talep Sorumlusu</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl" type="text" value="" id="PersonRequest" name="PersonRequest">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="example-email-input" class="col-sm-4 col-form-label text-left my-auto">CPM Proje Yöneticisi</label>
                    <div class="col-sm-8">
                        <select name="selValue" class="selectpicker col-12 font13" multiple data-actions-box="true" id="CpmResponsible">
                            @foreach (var k in Model.Item2.CpmEmployee)
                            {
                                <option  data-email="@k.Email"value="@k.Id">@k.FullName</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="example-email-input" class="col-sm-4 col-form-label text-left my-auto">Danışman</label>
                    <div class="col-sm-8">
                        <select name="selValue" class="selectpicker col-12 font13" multiple data-actions-box="true" id="Employee">
                            @foreach (var k in Model.Item2.CpmEmployee)
                            {
                                <option  data-email="@k.Email" value="@k.Id">@k.FullName</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Hedeflenen Başlangıç Tarihi</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl getDate" type="date" value="" id="StartDate" name="StartDate">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Hedeflenen Bitiş Tarihi</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl getDate" type="date" value="" id="EndDate" name="EndDate">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="example-text-input" class="col-sm-4 col-form-label text-left">Hedeflenen Adam Gün</label>
                    <div class="col-sm-8">
                        <input class="Input-Medium col-12 inputValidateControl" type="number" placeholder="Sayı giriniz" value="" id="ManDay" name="ProjectName">
                    </div>
                </div>
                <div class="form-group row">

                    <label for="example-tel-input" class="col-sm-4 col-form-label text-left">Proje Adım Durumu</label>
                    <div class="col-sm-8">
                        <select class="Dropdown col-lg-12 col-md-12 col-sm-12 mt-2 Input-Medium selectValidateControl" id="State" name="State">
                            <option value="">Seçiniz</option>
                            <option value="0">Başlanacak</option>
                            <option value="2">Devam Ediyor</option>
                            <option value="1">Tamamlandı</option>
                        </select>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="example-tel-input" class="col-sm-4 col-form-label text-left">Açıklama</label>
                    <div class="col-sm-8">
                        <textarea class="form-control inputValidateControl" rows="7" id="Description" name="Description"> </textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" data-projectId="" data-stepId="" data-groupNo="" id="SubmitStepDetail">Kaydet</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="staticBackdrop2" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog" style=" max-width: 869px!important;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Proje Adımı Yönetimi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-primary" data-projectId="" data-stepId="" data-groupNo="" id="UpdateStepDetail">Kaydet</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="ParentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ParentModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="min-width: 750px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="display: contents;" id="StepName"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
             
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                @*<button type="button" class="btn btn-primary" data-projectId="" data-stepId="" data-groupNo="" id="ParentStepDetail">Kaydet</button>*@
            </div>
        </div>
    </div>
</div>
<div class="d-flex flex-column flex-root" id="deneme">
    <div class="page d-flex flex-row flex-column-fluid">
        <div class="wrapper d-flex flex-column flex-row-fluid" id="kt_wrapper">
            <div class="content d-flex flex-column flex-column-fluid" id="kt_content">
                <div class="post d-flex flex-column-fluid" id="kt_post">
                    <div id="kt_content_container" class="container-xxl">
                        <div class="row mt-5">
                            <div class="col-lg-12">
                                <div class="card" style="min-height:18rem;">
                                    <div class="card-header" style="min-height:0 !important; padding: .75rem 2.50rem !important;">
                                        <h5>Ana Bilgiler</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-6">
                                                <ul class="list-unstyled personal-detail">
                                                    <li class=""><b> Proje Adı </b>: @Model.Item2.Project.ProjectName</li>
                                                    <li class="mt-2"><b> Firma </b>: @Model.Item2.Project.CompanyName</li>
                                                    <li class="mt-2"><b>Sözleşme</b>: @Model.Item2.Project.ContractName</li>
                                                    <li class="mt-2"><b>Açıklama</b>:  @Model.Item2.Project.Description</li>
                                                </ul>
                                            </div>
                                            <div class="col-6">
                                                <div class="d-flex align-items-center" style="background-color: white; ">
                                                    <table class="table table-flush  tableDteails">
                                                        <thead>
                                                            <tr>
                                                                <th class="text-muted"></th>
                                                                <th class="text-muted">Hedeflenen</th>
                                                                <th class="text-muted">Güncel Gerçekleşen</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @{
                                                                var targetStartDate = Model.Item2.ProjectReport.FirstOrDefault()?.TargetStartDate;
                                                                var realizedStartDate = Model.Item2.ProjectReport.FirstOrDefault()?.RealizedStartDate;
                                                                var targetEndDate = Model.Item2.ProjectReport.FirstOrDefault()?.TargetEndDate;
                                                                var realizedEndDate = Model.Item2.ProjectReport.FirstOrDefault()?.RealizedEndDate;
                                                            }
                                                            <tr>
                                                                <td class="text-muted min-w-125px w-125px">Başlangıç Tarihi</td>
                                                                <td class="text-muted">@(targetStartDate?.ToString("dd.MM.yyyy"))</td>
                                                                <td class="text-muted">@(realizedStartDate?.ToString("dd.MM.yyyy"))</td>
                                                            </tr>
                                                            <tr>
                                                                <td class="text-muted min-w-125px w-125px">Bitiş Tarihi</td>
                                                                <td class="text-muted">@(targetEndDate?.ToString("dd.MM.yyyy"))</td>
                                                                <td class="text-muted">@(realizedEndDate?.ToString("dd.MM.yyyy"))</td>
                                                            </tr>
                                                            <tr>

                                                                @{ var targetServiceTime = Model.Item2.ProjectReport.FirstOrDefault()?.TargetServiceTime;
                                                                    var realizedServiceTime = Model.Item2.ProjectReport.FirstOrDefault()?.RealizedServiceTime; }
                                                                <td class="text-muted min-w-125px w-125px">Adam/Gün</td>
                                                                <td class="text-muted">@(targetServiceTime?.ToString("0.##"))</td>
                                                                <td class="text-muted">@(realizedServiceTime?.ToString("0.##"))</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                @if (Model.Item2.Percent == 0)
                                                {
                                            <div class="d-flex align-items-center m-auto" style="margin-bottom:1rem !important">
                                                <span class="text-muted min-w-125px w-125px ml-2">Adam/Gün Yüzdesi</span>
                                                <div class="progress h-6px w-100 me-2 bg-light-success">
                                                    <div class="progress-bar bg-success" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                                </div>
                                                <span class="text-gray-400 fw-semibold">0%</span>
                                            </div>
                                                }
                                                else
                                                {
                                                    if (Model.Item2.Percent >= 100)
                                                    {
                                                        decimal result = Model.Item2.Percent - 100;

                                            <div class="d-flex align-items-center m-auto" style="margin-bottom:1rem !important">
                                                <span class="text-muted min-w-125px w-125px ml-2">Adam/Gün Yüzdesi</span>
                                                <div class="progress h-6px w-100 me-2 bg-light-success">
                                                    <div class="progress-bar bg-success" role="progressbar" style="width:100%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                                </div>
                                                <span class="text-success fw-semibold">100%</span>
                                            </div>
                                                        if (Convert.ToInt32(result) != 0)
                                                        {
                                                            <div class="d-flex align-items-center fw-bold fs-9" style="margin-bottom:1rem !important">
                                                                <div class="d-flex align-items-center m-auto">
                                                                    <span class="text-muted min-w-125px w-125px ml-2">Adam/Gün Yüzdesi</span>
                                                                    <div class="progress h-6px w-100 me-2 bg-light-danger">
                                                                        <div class="progress-bar bg-danger" role="progressbar" style="width:@result%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                                                    </div>
                                                                    <span class="text-success fw-semibold">@result%</span>
                                                                </div>
                                                            </div>
                                                        }

                                                    }
                                                    else
                                                    {
                                            <div class="d-flex align-items-center m-auto" style="margin-bottom:1rem !important">
                                                <span class="text-muted min-w-125px w-125px ml-2">Adam/Gün Yüzdesi</span>
                                                <div class="progress h-6px w-100 me-2 bg-light-success">
                                                    <div class="progress-bar bg-success" role="progressbar" style="width:@Convert.ToInt32(Model.Item2.Percent)%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                                </div>
                                                <span class="text-success fw-semibold">@Model.Item2.Percent.ToString("0.##")%</span>
                                            </div>
                                                    }

                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-5 mb-5">
                            <div class="col-lg-12">
                                <div class="card" style="min-height:18rem;">
                                    <div class="card-header" style="min-height:0 !important; padding: .75rem 2.50rem !important;">
                                        <h5>
                                            Proje Adımları

                                        </h5>
                                        <button class="float-right btn btn-outline-secondary" id="AddMainNode"> Ana Kırılım Ekle</button>
                                    </div>
                                    <div class="card-body" id="RenderNodes">
                                        @{ Html.RenderPartial("~/Views/Components/_Nodes.cshtml", Model.Item1); }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade " id="ServiceFormModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ServiceFormModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="min-width: 924px;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row  ml-1  " style="background-color:#fff;">
                    <div class="col-lg-2 col-md-6 col-sm-12 text-leftmy-auto pl-4">
                        <img src="/Images/images/cpm/Agenda.png" height="80">
                    </div>
                    <div class="col-lg-10 col-md-12 col-sm-12 my-auto pl-4">
                        <span class="" style="color: var(--thTitle);font-weight:bold;">Proje Servis Formu Oluştur</span> <br>
                        <span class="font11" style="color: var(--thNewText);">Proje bazlı servis formu oluşturmak için lütfen aşağıdaki alanları giriniz.</span>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" disabled data-bs-dismiss="modal">Vazgeç</button>
                <button type="button" class="btn btn-secondary" disabled data-projectId="" data-stepId="" data-groupNo="" id="SubmitForm">Kaydet</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/SweetAlert2/sweetalert2.all.min.js"></script>
<script type="text/javascript">
    var quill = null;
    function initEditor()
    {
        quill = new Quill('#editor', {
            theme: 'snow'
        });
    }
    // Modal açıldığında editör yüklenir
    $('#ServiceFormModal').on('shown.bs.modal', function (e) {
        initEditor();
    });
    // Modal kapandığında editör yok edilir
    $('#ServiceFormModal').on('hidden.bs.modal', function (e) {
        quill = null;
    });
    function getEditorData() {
        var html = quill.root.innerHTML;
        var text = quill.getText();
        var contents = quill.getContents();
        console.log('Girilen Metin:', text);
        console.log('Metin İçeriği:', contents);
        console.log('html İçeriği:', html);
    }
    // #region Gunun Tarihini ve Saatini Getirme
    try {
        /*Günün tarihini alma ve formatlama) */
        Date.prototype.getValidFormat = function () {
            var ay = this.getMonth() + 1;
            var gun = this.getDate();
            var yil = this.getFullYear();
            return yil + "-" + (ay < 10 ? "0" + ay : ay) + "-" + (gun < 10 ? "0" + gun : gun); //Gün ve ay 10 dan küçükse başına 0 gelir
        };
        var date = new Date();
        $(".getDate").val(date.getValidFormat());
    } catch (error) {
        console.error(error);
    }
    // #endregion
    $(document).ready(function () {
        var StepDetailModal = new bootstrap.Modal(document.getElementById('staticBackdrop'), {
            backdrop: 'static',
            keyboard: false
        });
        var MainNodeModal = new bootstrap.Modal(document.getElementById('MainNodeModal'), {
            backdrop: 'static',
            keyboard: false
        });

        var StepDetailModal2 = new bootstrap.Modal(document.getElementById('staticBackdrop2'), {
            backdrop: 'static',
            keyboard: false
        });
        var ParentModal = new bootstrap.Modal(document.getElementById('ParentModal'), {
            backdrop: 'static',
            keyboard: false
        });
        var ServiceFormModal = new bootstrap.Modal(document.getElementById('ServiceFormModal'), {
            backdrop: 'static',
            keyboard: false
        });
        $(StepDetailModal._element).on('show.bs.modal', function (event) {
            var selectPickerElement = event.target.querySelector('.selectpicker');
            $(selectPickerElement).selectpicker('refresh');
            $('.selectpicker').val('').trigger('change');
            $("#staticBackdrop .modal-body #StartDate").val('');
            $("#staticBackdrop .modal-body #EndDate").val('');
            $("#staticBackdrop .modal-body #ManDay").val('');
            $("#staticBackdrop .modal-body #Description").val('');
        });
        $(MainNodeModal._element).on('show.bs.modal', function (event) {
            $("#MainNodeModal .modal-body #MainNodeStartDate").val('');
            $("#MainNodeModal .modal-body #MainNodeEndDate").val('');
            $("#MainNodeModal .modal-body #MainNodeStep").val('');
            try {
                /*Günün tarihini alma ve formatlama) */
                Date.prototype.getValidFormat = function () {
                    var ay = this.getMonth() + 1;
                    var gun = this.getDate();
                    var yil = this.getFullYear();
                    return yil + "-" + (ay < 10 ? "0" + ay : ay) + "-" + (gun < 10 ? "0" + gun : gun); //Gün ve ay 10 dan küçükse başına 0 gelir
                };
                var date = new Date();
                $(".getDate").val(date.getValidFormat());
            } catch (error) {
                console.error(error);
            }
        });

        function StepDetailUpdate(Data, Modal)
        {
            $.ajax({
                url: '/Project/UpdateNodeDetail',
                type: 'POST',
                dataType: 'json',
                data: {
                    Id: Data.Id,
                    CurrentCpmResponsibleId: Data.CurrentCpmResponsibleId,
                    CurrentCpmResponsible: Data.CurrentCpmResponsible,
                    CurrentEmployeeId: Data.CurrentEmployeeId,
                    CurrentEmployee: Data.CurrentEmployee,
                    CurrentCompanyResponsible: Data.CurrentCompanyResponsible,
                    CurrentCompanyResponsibleId: Data.CurrentCompanyResponsibleId,
                    CurrentStartDate: Data.CurrentStartDate,
                    CurrentEndDate: Data.CurrentEndDate,
                    CurrentDay: Data.CurrentDay,
                    CurrentState: Data.CurrentState,
                    Approval: Data.Approval,
                    CurrentDescription: Data.CurrentDescription,
                    PersonRequest:Data.PersonRequest
                },
                success: function (result) {
                    if (result.IsSuccess) {
                        $.blockUI({
                            message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
                        });
                        $.get('RenderNode', { ProjectId: Data.ProjectId }, function (data)//Yeniden yükler listeyi
                        {
                            $('#RenderNodes').html(data);
                            setTimeout($.unblockUI, 240);
                        }, 'html');
                        toastr.success(result.Message);
                        Modal.hide();
                    }
                    else {
                        toastr.warning(result.Message);
                        Modal.hide();
                    }
                }
            });
        }
        //#region Kırılıma Detay Ekler
        $('body').on('click', '#SubmitStepDetail', function () {
            var EmpId = [];
            var EmpFullName = [];
            var EmployeeId = "";
            var EmployeeFullName = "";

            var CpmResId = [];
            var CpmResFullName = [];
            var CpmResponsibleId = "";
            var CpmResponsibleFullName = "";

            var CompanyResId = [];
            var CompanyResFullName = [];
            var CompanyResponsibleId = "";
            var CompanyResponsibleFullName = "";

            $("#staticBackdrop .modal-body #Employee :selected").map(function (i, el) {
                EmpFullName.push($(el).text());
                EmpId.push($(el).val());
            }).get();
            for (var i = 0; i < EmpFullName.length; i++) {
                EmployeeFullName = EmployeeFullName + EmpFullName[i];
                EmployeeId = EmployeeId + EmpId[i];

                if (i != EmpId.length - 1) {
                    EmployeeId = EmployeeId + ";";
                    EmployeeFullName = EmployeeFullName + ";";
                }
            }
            $("#staticBackdrop .modal-body #CpmResponsible :selected").map(function (i, el) {
                CpmResFullName.push($(el).text());
                CpmResId.push($(el).val());
            }).get();
            for (var i = 0; i < CpmResFullName.length; i++) {
                CpmResponsibleFullName = CpmResponsibleFullName + CpmResFullName[i];
                CpmResponsibleId = CpmResponsibleId + CpmResId[i];

                if (i != CpmResId.length - 1) {
                    CpmResponsibleId = CpmResponsibleId + ";";
                    CpmResponsibleFullName = CpmResponsibleFullName + ";";
                }
            }
            $("#staticBackdrop .modal-body #CompanyResponsible :selected").map(function (i, el) {
                CompanyResFullName.push($(el).text());
                CompanyResId.push($(el).val());
            }).get();
            for (var i = 0; i < CompanyResFullName.length; i++) {
                CompanyResponsibleFullName = CompanyResponsibleFullName + CompanyResFullName[i];
                CompanyResponsibleId = CompanyResponsibleId + CompanyResId[i];

                if (i != CompanyResId.length - 1) {
                    CompanyResponsibleId = CompanyResponsibleId + ";";
                    CompanyResponsibleFullName = CompanyResponsibleFullName + ";";
                }
            }
            var CurrentStartDate = $("#staticBackdrop .modal-body #StartDate").val();
            var CurrentEndDate = $("#staticBackdrop .modal-body #EndDate").val();
            var CurrentDay = $("#staticBackdrop .modal-body #ManDay").val();
            // Girdiyi temizleyin
            var cleanedValue = CurrentDay.replace(/\s/g, '').replace(',', '.');
           /* var CurrentDay = $("#staticBackdrop .modal-body #ManDay").val();*/
          /*  var CurrentDay = CurrentDayN.replace(',', '.');*/
            var CurrentState = $("#staticBackdrop .modal-body #State option:selected").text();
            var Approval = $("#staticBackdrop .modal-body #State option:selected").val();
            //var PersonRequest = $("#staticBackdrop2 .modal-body #PersonRequest").text();
            var PersonRequest = $("#PersonRequest").val();

            if (PersonRequest == '') {
                PersonRequest = $('#staticBackdrop .modal-body #PersonRequest').val();
            }
            var Data = {
                Id: $(this).attr('data-id'),
                ProjectId: $(this).attr('data-projectid'),
                CurrentCpmResponsibleId: CpmResponsibleId,
                CurrentCpmResponsible: CpmResponsibleFullName,
                CurrentEmployee: EmployeeFullName,
                CurrentEmployeeId: EmployeeId,
                CurrentCompanyResponsible: CompanyResponsibleFullName,
                CurrentCompanyResponsibleId: CompanyResponsibleId,
                CurrentStartDate: CurrentStartDate,
                CurrentEndDate: CurrentEndDate,
                CurrentDay: cleanedValue,
                CurrentState: CurrentState,
                Approval: Approval,
                PersonRequest: PersonRequest,
                CurrentDescription: $("#staticBackdrop .modal-body #Description").val()
            }
            if (CpmResponsibleId === "" || EmployeeId === "" || CompanyResponsibleId === "" || (CurrentDay === "" || CurrentDay === 0)) {
                swal('Lütfen boş alanları  doldurunuz!',
                    {
                        title: "UYARI !",
                        icon: "warning",
                        buttons: "Tamam",
                        name
                    });
            }
            else {
                StepDetailUpdate(Data, StepDetailModal);
            }
        });
        $('body').on('click', '#UpdateStepDetail', function ()
        {
            debugger;
            var EmpId = [];
            var EmpFullName = [];
            var EmployeeId = "";
            var EmployeeFullName = "";

            var CpmResId = [];
            var CpmResFullName = [];
            var CpmResponsibleId = "";
            var CpmResponsibleFullName = "";

            var CompanyResId = [];
            var CompanyResFullName = [];
            var CompanyResponsibleId = "";
            var CompanyResponsibleFullName = "";
            $("#staticBackdrop2 .modal-body #Employee :selected").map(function (i, el) {
                EmpFullName.push($(el).text());
                EmpId.push($(el).val());
            }).get();
            for (var i = 0; i < EmpFullName.length; i++) {
                EmployeeFullName = EmployeeFullName + EmpFullName[i];
                EmployeeId = EmployeeId + EmpId[i];

                if (i != EmpId.length - 1) {
                    EmployeeId = EmployeeId + ";";
                    EmployeeFullName = EmployeeFullName + ";";
                }
            }

            $("#staticBackdrop2 .modal-body #CpmResponsible :selected").map(function (i, el) {
                CpmResFullName.push($(el).text());
                CpmResId.push($(el).val());
            }).get();
            for (var i = 0; i < CpmResFullName.length; i++) {
                CpmResponsibleFullName = CpmResponsibleFullName + CpmResFullName[i];
                CpmResponsibleId = CpmResponsibleId + CpmResId[i];

                if (i != CpmResId.length - 1) {
                    CpmResponsibleId = CpmResponsibleId + ";";
                    CpmResponsibleFullName = CpmResponsibleFullName + ";";
                }
            }
            $("#staticBackdrop2 .modal-body #CompanyResponsible :selected").map(function (i, el) {
                CompanyResFullName.push($(el).text());
                CompanyResId.push($(el).val());
            }).get();
            for (var i = 0; i < CompanyResFullName.length; i++) {
                CompanyResponsibleFullName = CompanyResponsibleFullName + CompanyResFullName[i];
                CompanyResponsibleId = CompanyResponsibleId + CompanyResId[i];

                if (i != CompanyResId.length - 1) {
                    CompanyResponsibleId = CompanyResponsibleId + ";";
                    CompanyResponsibleFullName = CompanyResponsibleFullName + ";";
                }
            }
            var CurrentStartDate = $("#staticBackdrop2 .modal-body #StartDate").val();
            var CurrentEndDate = $("#staticBackdrop2 .modal-body #EndDate").val();
            //var CurrentDay = $("#staticBackdrop2 .modal-body #ManDay").val();
            //var CurrentDayN = $("#staticBackdrop .modal-body #ManDay").val();
            //var CurrentDay = parseFloat(CurrentDayN.replace(',', '.'));
            var CurrentDay = $("#staticBackdrop2 .modal-body #ManDay").val();
            // Girdiyi temizleyin
            var cleanedValue = CurrentDay.replace(/\s/g, '').replace(',', '.');
            // Ondalık bir değere dönüştürün
           /* var CurrentDay = parseFloat(cleanedValue);*/

            var CurrentState = $("#staticBackdrop2 .modal-body #State option:selected").text();
            var Approval = $("#staticBackdrop2 .modal-body #State option:selected").val();
            //var PersonRequest = $("#staticBackdrop2 .modal-body #PersonRequest").text();
            var PersonRequest = $("#PersonRequest").val();

            if (PersonRequest == '') {
                PersonRequest = $('#staticBackdrop2 .modal-body #PersonRequest').val();
            }
            var Data = {
                Id: $(this).attr('data-id'),
                ProjectId: $(this).attr('data-projectid'),
                CurrentCpmResponsibleId: CpmResponsibleId,
                CurrentCpmResponsible: CpmResponsibleFullName,
                CurrentEmployeeId: EmployeeId,
                CurrentEmployee: EmployeeFullName,
                CurrentCompanyResponsible: CompanyResponsibleFullName,
                CurrentCompanyResponsibleId: CompanyResponsibleId,
                CurrentStartDate: CurrentStartDate,
                CurrentEndDate: CurrentEndDate,
                CurrentDay: cleanedValue,
                CurrentState: CurrentState,
                Approval: Approval,
                PersonRequest: PersonRequest,
                CurrentDescription: $("#staticBackdrop2 .modal-body #Description").val()
            }
            if (CpmResponsibleId === "" || EmployeeId === "" || CompanyResponsibleId === "" || (CurrentDay === "" || CurrentDay === 0)) {
                swal('Lütfen boş alanları  doldurunuz!',
                    {
                        title: "UYARI !",
                        icon: "warning",
                        buttons: "Tamam",
                        name
                    });
            }
            else {
                StepDetailUpdate(Data, StepDetailModal2);
            }
        });
        // #endregion

        $('body').on('click', '#ShowStepDetailModal', function () {
            var Id = $(this).attr("data-id");
            var Step = $(this).attr("data-step");
            var GroupNo = $(this).attr("data-groupno");
            var ProjectId = $(this).attr("data-projectid");
            if ($(this).hasClass("LastNode")) {    // LastNode classı yoksa aşağıdaki kod çalıştırılabilir
                $.ajax({
                    url: '/Project/CheckStepDetail',
                    type: 'POST',
                    data: { Id: Id },
                    success: function (result) {
                        if (result.IsSuccess) {
                            $('#staticBackdrop').find('.modal-footer #SubmitStepDetail').attr('data-id', Id);
                            $('#staticBackdrop').find('.modal-footer #SubmitStepDetail').attr('data-projectid', ProjectId);
                            $('#staticBackdrop').find('.modal-body #step-value').text(GroupNo + " " + Step);
                            StepDetailModal.show();
                        }
                        else {
                            $.get('GetDetail', { Id: Id, IsReadOnly: true }, function (data) {
                                // Adım detayları dolu, _StepDetail.cshtml'yi yeniden yükleyin.
                                $('#staticBackdrop2 .modal-body').html(data);
                            }, 'html');
                            $('#staticBackdrop2').find('.modal-footer #UpdateStepDetail').attr('data-id', Id);
                            $('#staticBackdrop2').find('.modal-footer #UpdateStepDetail').attr('data-projectid', ProjectId);
                            $('#staticBackdrop2').find('.modal-body #step-value').text(GroupNo + " " + Step);
                            StepDetailModal2.show();
                        }
                    }
                });
            }
            else {

                $('#ParentModal .modal-body').html("");
                $('#ParentModal').find('.modal-header #StepName').text("");
                $.get('GetDetailParentChildNode', { Id: Id, GroupNo: GroupNo, ProjectId: ProjectId }, function (data) {
                    // Adım detayları dolu, _StepDetail.cshtml'yi yeniden yükleyin.
                    $('#ParentModal .modal-body').html(data);
                    // Gizli divi ayıklama ve yazdırma işlemi
                    //var hiddenDiv = $(data).filter('.ParentNode').html();
                    //$(hiddenDiv).show();
                    //$('#ParentModal').find('.modal-header #StepName').html(hiddenDiv);
                    $('#ParentModal').find('.modal-header #StepName').text(GroupNo + " " + Step);
                    ParentModal.show();
                }, 'html');

            }
        });
        //<button data-reset="" class="btn btn-sm btn-danger resetRow" data-projectid="` + projectid + `">
        //    <i class="sc-trash-bin fs-6"></i>
        //</button>
        $('body').on('click', '#EditStep', function () {
            var GroupNo = $(this).attr('data-groupno');
            var Step = $(this).attr('data-step');
            var projectid = $(this).attr('data-projectid');
            var $toggle = $(this).closest("h6.toggle");
            var id = $(this).data("id");
            $toggle.append(`<div class= "form-group row mb-2">
                <div class="col-md-6" style="display: flex;">
                    <span id="spanGroupNo" class="mr-3 my-auto">`+ GroupNo + `</span>
                    <input id="inputStep" type="text" class="form-control mb-2 mb-md-0" placeholder="" value="`+ Step + `">
                    </div>
                    <div class="col-md-6 my-auto">
                        <button id="saveRow" data-id="`+ id + `" data-projectid="` + projectid + `" data-edit-save="" class="btn btn-sm btn-success">
                            <i class="sc-check fs-6"></i>
                        </button>
                 
                    </div>
                </div>`
            );
            $toggle.find("a").remove();
        });
        $('body').on('click', '.addNode', function () {
            /*  var $node = $(this).closest('.node');*/
            var $node = $(this).closest('.node');
            var Id = $node.find('> .toggle a').attr("data-id");
            var ProjectId = $node.find('> .toggle a').attr("data-projectid");
            var GroupNo = $node.find('> .toggle a').attr("data-groupno");

            //İlk olarak düğüme ait bir servis formu var mı kontrolü
            $.ajax({
                url: '/Project/CheckNodeHasServiceForm',
                type: 'POST',
                dataType: 'json',
                data: { 'ProjectId': ProjectId, 'StepId': Id },
                success: function (result) {
                    if (result.IsSuccess) {
                        swal('Dikkat! Bu kırılıma ait daha önce oluşturulmuş proje formu mevcuttur.Bu nedenle kırılım ekleyemezsiniz.',
                            {
                                title: "UYARI !",
                                icon: "warning",
                                buttons: "Tamam",
                                name
                            });
                    }
                    else {
                        $node.find('> .toggle').append(`<div class= "form-group row mb-2" >
                                                        <div class="col-md-6">
                                                          <input type="text" class="form-control mb-2 mb-md-0 stepNew" placeholder="">
                                                        </div>
                                                        <div class="col-md-6 my-auto">
                                                          <button data-edit-save="" data-stepId="`+ Id + `"  data-groupno="` + GroupNo + `" data-projectid="` + ProjectId + `" class="btn btn-sm btn-success newNode">
                                                            <i class="sc-check fs-6"></i>
                                                          </button>
                                                        <button data-reset="" class="btn btn-sm btn-danger resetRow">
          <i class="sc-trash-bin fs-6"></i>
        </button>
                                                        </div>
                                                      </div>`);

                    }
                }
            });
        });
     
        var StartDate, EndDate;

        $('body').on('click', '.newNode', function () {
            var GroupNo = $(this).attr("data-groupno");
            var ProjectId = $(this).attr("data-projectid");
            var Step = $(this).parents(".form-group.row").find(".stepNew").val();
            var StepId = $(this).attr("data-stepId");
            Swal.fire({
                title: 'Uyarı !',
                text: "Bu kırılımı eklemek istediğinize emin misiniz?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Vazgeç',
                confirmButtonText: 'Ekle',
                html: `<div class="row">
                <div class="col-12"><h5 class="m-2 fs-8">Bu kırılımı eklemek istediğinize emin misiniz?
               </h5><h5 class="m-2 fs-8">Not : Eklemek istediğiniz adım için "Başlangıç ve Bitiş Tarihi" belirleyebilirsiniz.Belirlemediğiniz takdirde bugünün tarihi baz alınarak kaydedilecektir!</h5><div>
                <div class="col-12 d-flex m-2">
                    <font class="fs-8 text-left" style="width: inherit;">Başlangıç Tarihi:</font><input id="StartDateSweet" type="date" class="form-control fs-8">
                </div>
                <div class="col-12 d-flex m-2">
                   <font class="fs-8 text-left" style="width: inherit;">Bitiş Tarihi:</font><input id="EndDateSweet" type="date" class="form-control fs-8">
                </div>
            </div>`,
                preConfirm: function () {
                    // StartDate ve EndDate değişkenlerini burada ayarla
                    StartDate = $('#StartDateSweet').val();
                    EndDate = $('#EndDateSweet').val();
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.blockUI({
                        message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
                    });
                    $.ajax({
                        url: '/Project/CreateNode',
                        type: 'POST',
                        dataType: 'json',
                        data: { 'GroupNo': GroupNo, 'ProjectId': ProjectId, 'Step': Step, 'StartDate': StartDate, 'EndDate': EndDate, 'StepId': StepId },
                        success: function (result) {
                            if (result.IsSuccess) {
                                $.get('RenderNode', { ProjectId: ProjectId }, function (data)//Yeniden yükler listeyi
                                {
                                    $('#RenderNodes').html(data);
                                    setTimeout($.unblockUI, 240);
                                }, 'html');
                                toastr.success(result.Message);
                            }
                            else {
                                toastr.warning(result.Message);
                            }
                        }
                    });
                }
            })

        });

        $('body').on('click', '#AddMainNode', function () {
            MainNodeModal.show();
        });
        $('body').on('click', '#SubmitMainNode', function () {
            var ProjectId = $(this).attr("data-projectid");
            var MainNodeStep = $("#MainNodeModal .modal-body #MainNodeStep").val().trim();
            var MainNodeStartDate = $('#MainNodeModal .modal-body #MainNodeStartDate').val();
            var MainNodeEndDate = $('#MainNodeModal .modal-body #MainNodeEndDate').val();

            $.blockUI({
                message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
            });
            $.ajax({
                url: '/Project/CreateMainNode',
                type: 'POST',
                dataType: 'json',
                data: { 'ProjectId': ProjectId, 'Step': MainNodeStep, 'StartDate': MainNodeStartDate, 'EndDate': MainNodeEndDate },
                success: function (result) {
                    if (result.IsSuccess) {
                        toastr.success(result.Message);
                        $.get('RenderNode', { ProjectId: ProjectId }, function (data)//Yeniden yükler listeyi
                        {
                            $('#RenderNodes').html(data);
                            setTimeout($.unblockUI, 240);
                        }, 'html');

                        MainNodeModal.hide();
                    }
                    else {
                        MainNodeModal.hide();
                        toastr.warning(result.Message);
                    }
                }
            });
        });
        $('body').on('click', '.removeNode', function () {
            debugger;
            var $node = $(this).closest('.node');
            var Id = $node.find('> .toggle a').attr("data-id");
            var ProjectId = $node.find('> .toggle a').attr("data-projectid");
            var GroupNo = $node.find('> .toggle a').attr("data-groupno");
            /* var ParentId = $node.find('> .toggle a').attr("data-parentid");*/
            Swal.fire({
                title: 'Uyarı !',
                text: "Bu kırılımı silmek istediğinize emin misiniz?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Vazgeç',
                confirmButtonText: 'Sil'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.blockUI({
                        message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
                    });
                    $.ajax({
                        url: '/Project/DeleteNode',
                        type: 'POST',
                        dataType: 'json',
                        data: { 'GroupNo': GroupNo, 'ProjectId': ProjectId, },
                        success: function (result) {
                            if (result.IsSuccess) {
                                toastr.success(result.Message);
                                $.get('RenderNode', { ProjectId: ProjectId }, function (data)//Yeniden yükler listeyi
                                {
                                    $('#RenderNodes').html(data);
                                    setTimeout($.unblockUI, 240);
                                }, 'html');

                            }
                            else {
                                toastr.warning(result.Message);
                            }
                        }
                    });
                }
            })
        });
        $('body').on('click', '.resetRow', function () {
            $(this).parents(".form-group").remove();
            var $node = $(this).closest('.node');
            $node.find('> .toggle').remove();
            $node.find('> .rowActions').remove();
        });
        $('body').on('click', '#saveRow', function () {
            var GroupNo = $(this).parents(".form-group.row").find("#spanGroupNo").text();
            var Step = $(this).parents(".form-group.row").find("#inputStep").val();
            var id = $(this).data('id');
            var projectid = $(this).data('projectid');
            console.log(id);
            console.log(projectid);
            $.blockUI({
                message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
            });
            $.ajax({
                url: '/Project/UpdateNode',
                type: 'POST',
                dataType: 'json',
                data: { 'NodeId': Id, 'ProjectId': projectid, 'Step': Step, },
                success: function (result) {
                    if (result.IsSuccess) {
                        toastr.success(result.Message);
                        $.get('RenderNode', { ProjectId: projectid }, function (data)//Yeniden yükler listeyi
                        {
                            $('#RenderNodes').html(data);
                            setTimeout($.unblockUI, 240);
                        }, 'html');

                    }
                    else {
                        toastr.warning(result.Message);
                    }
                }
            });
        });
        $(function () {
            //0 Yukarı, 1 Aşağı
            // yukarı ok click işlemi
            $(document).on('click', '.upArrow', function () {
                var currentStep = $(this).closest('.node li');
                var previousStep = currentStep.prev('.node li');
                if (previousStep.length !== 0) {
                    var id = $(this).closest('.NodeOrder').data('rowid');
                    var ProjectId = $(this).attr("data-id");
                    $.blockUI({
                        message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
                    });
                    $.ajax({
                        method: 'GET',
                        url: '/Project/UpdateRowOrder',
                        dataType: 'json',
                        data: {
                            direction: 1,
                            id: id
                        },
                        success: function (resp) {
                            if (resp.IsSuccess) {
                                currentStep.detach();
                                previousStep.before(currentStep);
                                $.get('RenderNode', { ProjectId: ProjectId }, function (data)//Yeniden yükler listeyi
                                {
                                    $('#RenderNodes').html(data);
                                    setTimeout($.unblockUI, 240);
                                }, 'html');
                                toastr.success(resp.Message);
                            }
                            else {
                                toastr.warning(resp.Message);
                                console.log(resp.message);
                            }
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });
                }
            });

            // aşağı ok click işlemi
            $(document).on('click', '.downArrow', function () {
                var currentStep = $(this).closest('.node li');
                var nextStep = currentStep.next('.node li');
                if (nextStep.length !== 0) {
                    var id = $(this).closest('.NodeOrder').data('rowid');
                    var ProjectId = $(this).attr("data-id");
                    $.blockUI({
                        message: '<lottie-player autoplay  loop mode="normal" src="/Scripts/LottieFiles/cpm-loading-sc.json" style="width: 320px"></lottie-player>',
                    });
                    $.ajax({
                        method: 'GET',
                        url: '/Project/UpdateRowOrder',
                        dataType: 'json',
                        data: {
                            direction: 0,
                            id: id
                        },
                        success: function (resp) {
                            if (resp.IsSuccess) {
                                currentStep.detach();
                                nextStep.after(currentStep);
                                $.get('RenderNode', { ProjectId: ProjectId }, function (data)//Yeniden yükler listeyi
                                {
                                    $('#RenderNodes').html(data);
                                    setTimeout($.unblockUI, 240);
                                }, 'html');

                                toastr.success(resp.Message);
                            }
                            else {
                                toastr.warning(resp.Message);
                                console.log(resp.message);
                            }
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    })
                }
            });
        });


        $('body').on('click', '.cardServiceForm', function ()
        {
          var ServiceFormId=$(this).attr("data-id");
          var ProjectId=$(this).attr("data-projectid");
            $.get('GetContentForm', { ProjectId: ProjectId, Crud: "Update", ServiceFormId: ServiceFormId }, function (data) {
                $('#ServiceFormModal .modal-body').html(data);
                // Tüm input, select ve button öğelerini devre dışı bırak
            /*   $('#ServiceFormModal :input:not(.btn-close)').prop('disabled', true);*/
                ServiceFormModal.show();
            }, 'html');
        });


        $('body').on('shown.bs.modal', '#staticBackdrop2', function () {
            $(this).css('overflow-y', 'auto');
        });
        $('body').on('shown.bs.modal', '#ServiceFormModal', function () {
            $(this).css('overflow-y', 'auto');
        });


    });
</script>





